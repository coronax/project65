MEMORY {
ZP:  start = $0014, size = $0047, type = rw, define = yes;
RAM: start = $0400, size = $7000, file = %O, define = yes;
ROM: start = $E000, size = $1FB5, type = ro, file = %O, fill = yes;
KERNAL_TABLE: start = $FFB5, size = $4b, type = ro, file = %O, fill = yes;
}
SEGMENTS {
kernal_table: load = KERNAL_TABLE, type = ro;
#STARTUP:  load = RAM, type = ro, optional = yes;
#LOWCODE:  load = RAM, type = ro, optional = yes;
#ONCE:     load = RAM, type = ro, optional = yes;
#INIT:     load = RAM, type = ro, define = yes, optional = yes;
CODE:     load = ROM, type = ro, align = $100;
RODATA:   load = ROM, type = ro, align = $100;
#DATA:     load = RAM, type = rw, align = $100;
#ZPSAVE:   load = RAM, type = bss, optional = yes;
BSS:      load = RAM, type = bss, define = yes;
HEAP:     load = RAM, type = bss, optional = yes;
ZEROPAGE: load = ZP,  type = zp;
}
