MEMORY {
ZP:  start = $000A, size = $007A, type = rw, define = yes;
RAM: start = $0400, size = $7000, file = %O, define = yes;
ROM: start = $E000, size = $1FC5, type = ro, file = %O, fill = yes;
KERNAL_TABLE: start = $FFC5, size = $3b, type = ro, file = %O, fill = yes;
}
SEGMENTS {
kernal_table: load = KERNAL_TABLE, type = ro;
STARTUP:  load = RAM, type = ro, optional = yes;
LOWCODE:  load = RAM, type = ro, optional = yes;
ONCE:     load = RAM, type = ro, optional = yes;
INIT:     load = RAM, type = ro, define = yes, optional = yes;
CODE:     load = ROM, type = ro, align = $100;
RODATA:   load = ROM, type = ro, align = $100;
DATA:     load = RAM, type = rw, align = $100;
ZPSAVE:   load = RAM, type = bss, optional = yes;
BSS:      load = RAM, type = bss, define = yes;
HEAP:     load = RAM, type = bss, optional = yes;
ZEROPAGE: load = ZP,  type = zp;
}
